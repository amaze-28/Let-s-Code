//  *** Using struct ***  \\

#include<bits/stdc++.h>
using namespace std;

struct Node{
	int data;
	struct Node* left;
	struct Node* right
	
	// Constructor
	Node(int val){
		data = val;
		left = right = NULL;
	}
};

int main(){
	struct Node* root = new Node(1);
	root->left = new Node(2);
	root->right = new Node(3);
	root->left->right = new Node(5);
}


*** ------------------------------------------------------------------------------------------------------------------------------------------------ ***

//  *** Using class ***   \\

#include<bits/stdc++.h>
using namespace std;

template <typename T>

class TreeNode {
public:
	T data;
	vector<TreeNode<T>*> children;
    
    // Constructor
    TreeNode(T data){
    	this->data = data;
    }
};


int main(){
	TreeNode<int> root = new TreeNode<int>(1);
	TreeNode<int> node1 = new TreeNode<int>(2);
	TreeNode<int> node2 = new TreeNode<int>(3);
	root->children.push_back(node1);
	root->children.push_back(node2);
}
